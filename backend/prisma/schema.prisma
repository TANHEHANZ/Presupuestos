generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OPERADOR
  ADMIN
  PRESUPUESTOS
}

enum EstadoRegistro {
  HISTORICO
  ELIMINADO
  ACTIVO
  INACTIVO
  RECUPERADO
}

enum U_estado {
  ACTIVO
  INACTIVO
}

model User {
  id              String          @id @default(cuid())
  ci              String          @unique
  name            String
  rol             Role
  password        String
  estado          U_estado        @default(ACTIVO)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  permisos        String[]
  accesos         String[]
  unidadEjecutora UnidadEjecutora @relation(fields: [unidadId], references: [id])
  unidadId        String
  historiales     Historial[]
  Presupuesto     Presupuesto[]   @relation("CreadoPor")
  Programacion    Programacion[]
}

model U_navigation {
  id            String      @id @default(cuid())
  nombre        String
  path          String?
  icon          String?
  estado        U_estado    @default(ACTIVO)
  requiredPerms String[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  group         U_groupNav? @relation(fields: [groupId], references: [id])
  groupId       String?
}

model U_groupNav {
  id          String         @id @default(cuid())
  title       String
  navegations U_navigation[]
}

model UnidadEjecutora {
  id           String        @id @default(cuid())
  ue           String        @unique
  secretaria   String
  descripcion  String?
  estado       U_estado      @default(ACTIVO)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  presupuestos Presupuesto[]
  User         User[]
}

model Presupuesto {
  id                  String         @id @default(cuid())
  mes                 DateTime // de aca debemos sacar que mes se subio y la gestion que se subio 
  da                  Int
  ue                  Int // este es el ue de unidadEjecutora debemos usarlo para la relacion con uniad ejecutora  
  catPrg              String
  fte                 Int
  org                 Int
  objetoGasto         String // codigo
  codigoObjetoGasto   String // unimos DA UE car prg FTE Org objeto
  presupuestoVigente  Float //monto
  devengado           Float // monto
  porcentajeEjecucion Float // monto
  estado              EstadoRegistro @default(ACTIVO)
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt

  descrpcionObjetoGasto String
  unidadEjecutora       UnidadEjecutora @relation(fields: [unidadId], references: [id])
  unidadId              String
  creadoPor             User            @relation(fields: [creadoPorId], references: [id], name: "CreadoPor")
  creadoPorId           String

  @@unique([unidadId, codigoObjetoGasto, mes])
}

enum Accion {
  CREACION
  MODIFICACION_VALOR
  CAMBIO_ESTADO
  VALIDACION
  RECHAZO
  REVERSION
}

model Programacion {
  id                String    @id @default(uuid())
  mes               String
  value             Float
  estado            U_estado  @default(ACTIVO)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  codigoObjetoGasto String
  version           Int       @default(1)
  User              User?     @relation(fields: [userId], references: [id])
  userId            String?
  Historial         Historial @relation(fields: [historialId], references: [id])
  historialId       String
}

model Historial {
  id        String   @id @default(cuid())
  accion    Accion
  table     String
  detalle   String?
  old_data  Json?
  new_data  Json
  fecha     DateTime @default(now())
  usuario   User     @relation(fields: [usuarioId], references: [id])
  usuarioId String
  ipAddress String?
  userAgent String?

  Programacion Programacion[]
}

model Configuracion {
  id        String   @id @default(cuid())
  module    String
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
